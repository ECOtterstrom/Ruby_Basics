Reading Documentation 2 Exercises

1. How would you use String#upcase to create an uppercase version of 
   the string "xyz"?
   
   puts "xyz".upcase  #=> "XYZ"
   
   
2. Assume you have this Array:

   a = %w(a b c d e)
   
   How would you use Array#insert to insert the numbers 5, 6, and 7 between
   the elements with values 'c' and 'd'?
   
   a.insert(3, 5, 6, 7)   #=> ["a", "b", "c", 5, 6, 7, "d"]
   
   
3. Assume you have the following code:

   s = 'abc def ghi,jkl mno pqr,stu vwx yz'
   puts s.split.inspect
   puts s.split(',').inspect
   puts s.split(',', 2).inspect 
   
   What will each of the 3 puts statements print?
   
   #=> ["abc", "def", "ghi,jkl", "mno", "pqr,stu", "vwx", "yz"]
   
   #=> ["abc def ghi", "jkl mno pqr", "stu vwx yz"]
   
   #=> ["abc def ghi", "jkl mno pqr,stu vwx yz"]
   
   
4. Assume you have the following code:

   require 'date'
   
   puts Date.new
   puts Date.new(2016)
   puts Date.new(2016, 5)
   puts Date.new(2016, 5, 13) 
   
   What will each of the 4 puts statements print?
   
   The documentation for the Date class can be 
   found in the Standard library API documentation
   https://ruby-doc.org/stdlib-2.6/libdoc/date/rdoc/Date.html
   
   #=> #<Date: 4712-01-01
   #=> #<Date: 2016-01-01
   #=> #<Date: 2016-05-01
   #=> #<Date: 2016-05-13
   
   
5. Assume you have the following code:

   a = [1, 4, 8, 11, 15, 19]
   
   How would you search this array to find the first element whose 
   value exceeds 8?
   
   value = a.bsearch { |x| x >= 8 } puts value #=> 8
   value = a.bsearch { |x| x >= 9 } puts value #=> 11
   
   
6. What do each of these puts statements output?

   a = %w(a b c d e)
   puts a.fetch(7)
      IndexError: index 7 outside of array bounds: -5...5
   puts a.fetch(7, 'beats me')
      beats me
   puts a.fetch(7) { |index| index**2}
      49
   
   
7. What does this code print?

   5.step(to: 10, by: 3) { |value| puts value }
   
      5
      8
   
   
8. Use irb to run the following code:

   s = 'abc'
   puts s.public_methods.inspect
   
   s = 'abc'
   puts s.public_methods(false).inspect #prints only the public methods
   that are defined or overridden by the String class
   

9. From Ruby version 2.3.0.  Use irb to run the following code:

   a = [5, 9, 3, 11]
   puts a.sort.take(2)
   
   3
   5
   

10. Find the documentation for YAML::load_file.

   require 'yaml'
   MESSAGES = YAML.load_file('calculator_messages.yml')
   
   https://ruby-doc.org/stdlib-2.6/libdoc/yaml/rdoc/YAML/Store.html
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   